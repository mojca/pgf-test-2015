extern "C" {
#include <lauxlib.h>
}

${includes}

#include <pgf/gd/ogdf/c/AlgorithmBase.h>

using namespace pgf;
using namespace ogdf;


${wrap_start}
static int ${function_name} (lua_State *L) {
  
  struct Algorithm : AlgorithmBase {
    Algorithm(GraphBridged& gb) : AlgorithmBase (gb) {}

    void run (lua_State* lua_state) {
${function_body}
    }
  };
  
  GraphBridged graph_bridge (L);
  
  Algorithm algo(graph_bridge);
  algo.run(L);
  
  graph_bridge.unbridgeGraph(L);
  
  return 0;
}
${wrap_end}


static const struct luaL_reg registry [] = {
${registry}
  {NULL, NULL}  // sentinel
};


extern "C" {
int luaopen_${library_c_name} (lua_State *L) {
  luaL_register(L, "${library_name}", registry);
  return 1;
}
}
